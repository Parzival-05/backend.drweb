services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - LOG_FILE=${LOG_FILE}
      - POOL_SIZE=${POOL_SIZE}
      - MAX_OVERFLOW=${MAX_OVERFLOW}
      - POOL_PRE_PING=${POOL_PRE_PING}
      - POOL_RECYCLE=${POOL_RECYCLE}
      - POOL_USE_LIFO=${POOL_USE_LIFO}
      - POOL_TIMEOUT=${POOL_TIMEOUT}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      - db
  db:
      image: postgres:17-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data2/
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 2s
        timeout: 5s
        retries: 5
volumes:
  postgres_data: 